<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.scte.org/schemas/130-2/2008a/core" targetNamespace="http://www.scte.org/schemas/130-2/2008a/core" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<!--***** Start Common Message *****-->
	<!-- Service Check Request Message-->
	<xsd:complexType name="ServiceCheckRequestType">
		<xsd:complexContent>
			<xsd:extension base="Msg_RequestBaseType">
				<xsd:sequence>
					<xsd:element ref="Ext" minOccurs="0"/>
				</xsd:sequence>
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="ServiceCheckRequest" type="ServiceCheckRequestType">
		<xsd:annotation>
			<xsd:documentation>Service check request message element.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--Service Check Response Message-->
	<xsd:complexType name="ServiceCheckResponseType">
		<xsd:complexContent>
			<xsd:extension base="Msg_ResponseBaseType">
				<xsd:sequence>
					<xsd:element ref="Ext" minOccurs="0"/>
				</xsd:sequence>
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="ServiceCheckResponse" type="ServiceCheckResponseType">
		<xsd:annotation>
			<xsd:documentation>Service check response message element.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--Service Status Notification Message-->
	<xsd:complexType name="ServiceStatusNotificationType">
		<xsd:complexContent>
			<xsd:extension base="Msg_NotificationBaseType">
				<xsd:sequence>
					<xsd:element ref="StatusCode">
						<xsd:annotation>
							<xsd:documentation>Notification interpretation identifier.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="Ext" minOccurs="0"/>
				</xsd:sequence>
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="ServiceStatusNotification" type="ServiceStatusNotificationType">
		<xsd:annotation>
			<xsd:documentation>Service status notification message element.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--Service Status Acknowledgement Message-->
	<xsd:complexType name="ServiceStatusAcknowledgementType">
		<xsd:complexContent>
			<xsd:extension base="Msg_AcknowledgementBaseType">
				<xsd:sequence>
					<xsd:element ref="Ext" minOccurs="0"/>
				</xsd:sequence>
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="ServiceStatusAcknowledgement" type="ServiceStatusAcknowledgementType">
		<xsd:annotation>
			<xsd:documentation>Service status acknowledgement message element.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--***** End Common Messages *****-->
	<!---->
	<!--Global types-->
	<xsd:simpleType name="dateTimeTimezoneType">
		<xsd:annotation>
			<xsd:documentation>xsd:dateTime that requires a timezone indicator.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:dateTime">
			<xsd:pattern value="[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}([\.][0-9]*)?(Z|([-+][0-9]+:[0-9]+))"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="identityAttrType">
		<xsd:annotation>
			<xsd:documentation>Unique identity identifier.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="nonEmptyStringType"/>
	</xsd:simpleType>
	<xsd:simpleType name="idAttrType">
		<xsd:annotation>
			<xsd:documentation>Unique identifier.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="nonEmptyStringType"/>
	</xsd:simpleType>
	<xsd:simpleType name="mediaAvailableAttrType">
		<xsd:annotation>
			<xsd:documentation>Tri-state media availability indicator.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:boolean"/>
	</xsd:simpleType>
	<xsd:simpleType name="messageIdAttrType">
		<xsd:annotation>
			<xsd:documentation>Original message identifier.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="nonEmptyStringType"/>
	</xsd:simpleType>
	<xsd:simpleType name="messageRefAttrType">
		<xsd:annotation>
			<xsd:documentation>Reference to original message.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="messageIdAttrType"/>
	</xsd:simpleType>
	<xsd:simpleType name="nonEmptyStringType">
		<xsd:annotation>
			<xsd:documentation>Non empty xsd:string.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="1"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="registrationRefAttrType">
		<xsd:annotation>
			<xsd:documentation>Reference to a specific registration message.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="messageIdAttrType"/>
	</xsd:simpleType>
	<xsd:simpleType name="resendAttrType">
		<xsd:annotation>
			<xsd:documentation>Message retransmission identifier.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="messageIdAttrType"/>
	</xsd:simpleType>
	<xsd:simpleType name="systemAttrType">
		<xsd:annotation>
			<xsd:documentation>Message origin identifier.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="nonEmptyStringType"/>
	</xsd:simpleType>
	<xsd:simpleType name="versionAttrType">
		<xsd:annotation>
			<xsd:documentation>Interface version number.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="nonEmptyStringType"/>
	</xsd:simpleType>
	<!---->
	<!--Attributes on all messages -->
	<xsd:attributeGroup name="Msg_BaseAttrsType">
		<xsd:annotation>
			<xsd:documentation>Common attributes required by all message elements.</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="messageId" type="messageIdAttrType" use="required">
			<xsd:annotation>
				<xsd:documentation>Unique message element identifier.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="version" type="versionAttrType" use="required">
			<xsd:annotation>
				<xsd:documentation>Assigned specification part version number.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="identity" type="identityAttrType" use="required">
			<xsd:annotation>
				<xsd:documentation>Logical service source identifier.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="system" type="systemAttrType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Message origin identifier.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>
	<xsd:attributeGroup name="Msg_ReqNotifyBaseAttrsType">
		<xsd:annotation>
			<xsd:documentation>Common attributes on all request/notification message elements.</xsd:documentation>
		</xsd:annotation>
		<xsd:attributeGroup ref="Msg_BaseAttrsType"/>
		<xsd:attribute name="resend" type="resendAttrType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Message retransmission identifier.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>
	<xsd:attributeGroup name="Msg_RespAckBaseAttrsType">
		<xsd:annotation>
			<xsd:documentation>Common attributes on all response/acknowledgement message elements.</xsd:documentation>
		</xsd:annotation>
		<xsd:attributeGroup ref="Msg_BaseAttrsType"/>
		<xsd:attribute name="messageRef" type="messageRefAttrType" use="required">
			<xsd:annotation>
				<xsd:documentation>Reference to original message.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>
	<!---->
	<!--***** Start Common Message Bases *****-->
	<!-- Common message bases used by all messages-->
	<xsd:complexType name="Msg_RequestBaseType">
		<xsd:annotation>
			<xsd:documentation>Common request message attributes.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="InitiatorData" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Private data to be returned (i.e., echoed back) in the response message.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attributeGroup ref="Msg_ReqNotifyBaseAttrsType"/>
	</xsd:complexType>
	<xsd:complexType name="Msg_ResponseBaseType">
		<xsd:annotation>
			<xsd:documentation>Common response message attributes and elements.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="InitiatorData" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Private data returned (i.e., echoed back) by the request message recipient if present in the original request message.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element ref="StatusCode">
				<xsd:annotation>
					<xsd:documentation>Request processing status code.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attributeGroup ref="Msg_RespAckBaseAttrsType"/>
	</xsd:complexType>
	<xsd:complexType name="Msg_NotificationBaseType">
		<xsd:annotation>
			<xsd:documentation>Common notification mesage attributes.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="InitiatorData" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Private data to be returned (i.e., echoed back) in the acknowledgement message.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attributeGroup ref="Msg_ReqNotifyBaseAttrsType"/>
	</xsd:complexType>
	<xsd:complexType name="Msg_AcknowledgementBaseType">
		<xsd:annotation>
			<xsd:documentation>Common acknowledgement message attribues and elements.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="InitiatorData" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Private data returned (i.e., echoed back) by the notification message recipient if present in the original notification message.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element ref="StatusCode">
				<xsd:annotation>
					<xsd:documentation>Notification processing status code.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attributeGroup ref="Msg_RespAckBaseAttrsType"/>
	</xsd:complexType>
	<!--***** End Common Message Elements *****-->
	<!---->
	<!--***** Start Common Basic Elements *****-->
	<!--Address element-->
	<xsd:complexType name="AddressType">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="type" type="nonEmptyStringType" use="optional">
					<xsd:annotation>
						<xsd:documentation>Endpoint information type. </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:element name="Address" type="AddressType">
		<xsd:annotation>
			<xsd:documentation>Endpoint information.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--Ad Type element-->
	<xsd:complexType name="AdTypeType">
		<xsd:simpleContent>
			<xsd:extension base="nonEmptyStringType">
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:element name="AdType" type="AdTypeType">
		<xsd:annotation>
			<xsd:documentation>Ad type identification.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--Content Asset Reference (can be either entertainment, ad, etc.)-->
	<xsd:complexType name="AssetRefType">
		<xsd:attribute name="providerID" type="nonEmptyStringType" use="required">
			<xsd:annotation>
				<xsd:documentation>Provider identification. For example, CableLabs ADI.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="assetID" type="nonEmptyStringType" use="required">
			<xsd:annotation>
				<xsd:documentation>Asset identification and may be scoped by Provider identification. For example, CableLabs ADI.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:anyAttribute namespace="##any" processContents="lax"/>
	</xsd:complexType>
	<xsd:element name="AssetRef" type="AssetRefType">
		<xsd:annotation>
			<xsd:documentation>Asset identification.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--Callout Element-->
	<xsd:complexType name="CalloutType">
		<xsd:sequence>
			<xsd:element ref="Address" maxOccurs="unbounded"/>
			<xsd:element ref="Ext" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="message" type="nonEmptyStringType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Specific message to be delivered via the supplied destination. Omit if all messages are to be delivered to the specified destination.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:anyAttribute namespace="##any" processContents="lax"/>
	</xsd:complexType>
	<xsd:element name="Callout" type="CalloutType">
		<xsd:annotation>
			<xsd:documentation>All messages or per message type destination endpoint identification.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--Content element-->
	<xsd:complexType name="ContentType">
		<xsd:sequence>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>Content identification. Uniquely identifies a single piece of content (i.e. only one content entity). Multiple identification methods may be used to reference the single, unique content item. For exmaple, ad-ID and V-ISAN.</xsd:documentation>
				</xsd:annotation>
				<xsd:element ref="AssetRef" minOccurs="0"/>
				<xsd:element ref="Program" minOccurs="0"/>
				<xsd:sequence minOccurs="0">
					<xsd:element ref="SegmentationUpid" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:element ref="SpotRef" minOccurs="0"/>
				<xsd:element ref="URI" minOccurs="0"/>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>Group of content location identifiers.</xsd:documentation>
				</xsd:annotation>
				<xsd:element ref="ContentLocation" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>Additional content information</xsd:documentation>
				</xsd:annotation>
				<xsd:element ref="AdType" minOccurs="0"/>
				<xsd:element ref="Duration" minOccurs="0"/>
				<xsd:element ref="Tracking" minOccurs="0"/>
			</xsd:sequence>
			<xsd:element ref="Ext" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Extensibility - elements from any namespace. The "metadata" from any auxillary sources are located herein.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="idAttrType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Unique identifier.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:anyAttribute namespace="##any" processContents="lax"/>
	</xsd:complexType>
	<xsd:element name="Content" type="ContentType">
		<xsd:annotation>
			<xsd:documentation>Content (entertainment, ad, etc.) description and identification.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--ContentDataModel element-->
	<xsd:complexType name="ContentDataModelType">
		<xsd:simpleContent>
			<xsd:extension base="nonEmptyStringType">
				<xsd:attribute name="type" type="nonEmptyStringType" use="optional">
					<xsd:annotation>
						<xsd:documentation>Content data model general type. </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:element name="ContentDataModel" type="ContentDataModelType">
		<xsd:annotation>
			<xsd:documentation>Content data model identifier. Typically, a URI.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--Content location element-->
	<xsd:complexType name="ContentLocationType">
		<xsd:simpleContent>
			<xsd:extension base="xsd:anyURI">
				<xsd:attribute name="mediaAvailable" type="mediaAvailableAttrType" use="optional">
					<xsd:annotation>
						<xsd:documentation>Media availability indicator. True=Asset available. False=Asset not available. Omitted = Asset availability unknown.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:element name="ContentLocation" type="ContentLocationType"/>
	<!--Current Time element-->
	<xsd:element name="CurrentDateTime" type="dateTimeTimezoneType"/>
	<!--Duration Control elements-->
	<xsd:complexType name="DurationType">
		<xsd:annotation>
			<xsd:documentation>Time format PnYn MnDTnH nMn.nnnS</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="xsd:duration">
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:element name="Duration" type="DurationType">
		<xsd:annotation>
			<xsd:documentation>Specific run-time length.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--Extensibility element-->
	<xsd:element name="Ext">
		<xsd:annotation>
			<xsd:documentation>Extensibility - elements from any namespace.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:anyAttribute namespace="##any" processContents="lax"/>
		</xsd:complexType>
	</xsd:element>
	<!--External status code element-->
	<xsd:complexType name="ExternalStatusCodeType">
		<xsd:sequence minOccurs="0">
			<xsd:element ref="Note" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="Ext" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="source" type="nonEmptyStringType" use="required">
			<xsd:annotation>
				<xsd:documentation>Identifier, typically a URL, specifying the detail attribute's source. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="detail" type="nonEmptyStringType" use="required">
			<xsd:annotation>
				<xsd:documentation>External status code as defined by the referenced source.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:anyAttribute namespace="##any" processContents="lax"/>
	</xsd:complexType>
	<xsd:element name="ExternalStatusCode" type="ExternalStatusCodeType">
		<xsd:annotation>
			<xsd:documentation>Status code from an external (non-SCTE 130) specification.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--IniatorData element-->
	<xsd:complexType name="InitiatorDataType">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:element name="InitiatorData" type="InitiatorDataType">
		<xsd:annotation>
			<xsd:documentation>Private data returned (i.e., echoed back) by the message respondent.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--Note element-->
	<xsd:complexType name="NoteType">
		<xsd:simpleContent>
			<xsd:extension base="nonEmptyStringType">
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:element name="Note" type="NoteType">
		<xsd:annotation>
			<xsd:documentation>Descriptive text.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--Program identification element-->
	<xsd:complexType name="ProgramType">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="uniqueProgramID" type="xsd:nonNegativeInteger" use="optional">
					<xsd:annotation>
						<xsd:documentation>Unique program identifier.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="referenceDateTime" type="dateTimeTimezoneType" use="optional">
					<xsd:annotation>
						<xsd:documentation>Reference date and time.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:element name="Program" type="ProgramType">
		<xsd:annotation>
			<xsd:documentation>Program name and/or identification.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--SCTE 35 Segmentation UPID element-->
	<xsd:complexType name="Scte35SegmentationUpidType">
		<xsd:simpleContent>
			<xsd:extension base="xsd:hexBinary">
				<xsd:attribute name="type" type="xsd:unsignedByte" use="required">
					<xsd:annotation>
						<xsd:documentation>A value from SCTE 35 Table 8-6 identifying the information format.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="length" type="xsd:unsignedByte" use="optional">
					<xsd:annotation>
						<xsd:documentation>The information length in bytes. Limits may be applied as per SCTE 35 Table 8-6.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="eventID" type="xsd:unsignedInt" use="optional">
					<xsd:annotation>
						<xsd:documentation>A 32-bit unique segmentation event identifier.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="typeID" type="xsd:unsignedByte" use="optional">
					<xsd:annotation>
						<xsd:documentation>The segmentation type as specified by SCTE 35 Table 8-7.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="segmentNum" type="xsd:unsignedByte" use="optional">
					<xsd:annotation>
						<xsd:documentation>Identification of a specific segment within a segmentation upid.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="segmentsExpected" type="xsd:unsignedByte" use="optional">
					<xsd:annotation>
						<xsd:documentation>Expected number of individual segments within the segmentation upid.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="referenceDateTime" type="dateTimeTimezoneType" use="optional">
					<xsd:annotation>
						<xsd:documentation>Contextual reference date and time.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:element name="SegmentationUpid" type="Scte35SegmentationUpidType">
		<xsd:annotation>
			<xsd:documentation>SCTE 35 segmentation descriptor construct. The value is the segmentation upid.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--SCTE 118 Spot element-->
	<xsd:complexType name="Scte118SpotType">
		<xsd:attribute name="trafficId" type="xsd:integer" use="required">
			<xsd:annotation>
				<xsd:documentation>Traffic ID generated by the traffic and billing system.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="spotId" type="nonEmptyStringType" use="required">
			<xsd:annotation>
				<xsd:documentation>Traffic and billing assigned spot identifier.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="advertiserName" type="nonEmptyStringType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Operator/MSO entered value provided by the traffic and billing system.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="spotName" type="nonEmptyStringType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Operator/MSO entered value provided by the traffic and billing system.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="spotType" type="nonEmptyStringType" use="optional">
			<xsd:annotation>
				<xsd:documentation>For SCTE 118, one of the following: SCHED=Scheduled, FILL=Fill, BONUS=Bonus.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="schedSource" type="nonEmptyStringType" use="optional">
			<xsd:annotation>
				<xsd:documentation>e.g., Interconnect, Local, National, Marketing, etc. Assigned by the originating traffic and billing system.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="adId" type="nonEmptyStringType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Advertising digital identifier.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:anyAttribute namespace="##any" processContents="lax"/>
	</xsd:complexType>
	<xsd:element name="SpotRef" type="Scte118SpotType">
		<xsd:annotation>
			<xsd:documentation>Typically, an SCTE 118 spot element.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--Status code element-->
	<xsd:complexType name="StatusCodeType">
		<xsd:sequence>
			<xsd:element ref="Note" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ExternalStatusCode" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="class" type="xsd:nonNegativeInteger" use="required">
			<xsd:annotation>
				<xsd:documentation>One of the following values:
0 = Success
1 = Error
2 = Warning
3 = Information
4 = External status code
... = User defined and outside the scope of this specification.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="detail" type="xsd:nonNegativeInteger" use="optional">
			<xsd:annotation>
				<xsd:documentation>A SCTE 130 specific status code.</xsd:documentation>
				<xsd:documentation>See the specification for additional details.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:anyAttribute namespace="##any" processContents="lax"/>
	</xsd:complexType>
	<xsd:element name="StatusCode" type="StatusCodeType">
		<xsd:annotation>
			<xsd:documentation>SCTE 130 status code.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--Tracking element-->
	<xsd:complexType name="TrackingType">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:element name="Tracking" type="TrackingType">
		<xsd:annotation>
			<xsd:documentation>ADS specified identifier.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!--URI element-->
	<xsd:complexType name="URIType">
		<xsd:simpleContent>
			<xsd:extension base="xsd:anyURI">
				<xsd:anyAttribute namespace="##any" processContents="lax"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:element name="URI" type="URIType">
		<xsd:annotation>
			<xsd:documentation>Uniform resource identifier.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!---->
	<!--***** End Basic Elements *****-->
</xsd:schema>
